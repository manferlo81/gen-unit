name: CI

on:
  push:
    branches:
      - main
    tags:
      - v*.*.*

  pull_request:
    branches:
      - main

env:
  DEFAULT_NODE_VERSION: 20.x

jobs:
  job_lint_test_build:
    name: Lint, Test and Build
    uses: './.github/workflows/_lint-test-build.yml'

  job_upload_coverage:
    name: Upload Coverage to Codecov

    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref_type == 'branch'
    needs: job_lint_test_build

    steps:
      - name: Checkout, Setup Node.js v${{ env.DEFAULT_NODE_VERSION }} and Install dependencies
        uses: manferlo81/action-checkout-node-install@v0
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}

      - name: Test
        run: npm test
        env:
          CI: true

      - name: Upload Coverage
        uses: codecov/codecov-action@v4
        with:
          directory: coverage
          token: ${{ secrets.CODECOV_TOKEN }}

  job_create_release:
    name: Create GitHub Release

    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    needs: job_lint_test_build

    permissions:
      contents: write

    steps:
      - name: Checkout, Setup Node.js v${{ env.DEFAULT_NODE_VERSION }} and Install dependencies
        uses: manferlo81/action-checkout-node-install@v0
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}

      - name: Build
        run: npm run build

      - name: Create Tarball
        run: npm pack

      - name: Create Release for ${{ github.ref_name }}
        uses: manferlo81/action-auto-release@v0
        with:
          files: gen-unit-*.tgz

  job_publish_to_npm:
    name: Publish Package to npm Registry

    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    needs: job_lint_test_build

    steps:
      - name: Checkout, Setup Node.js v${{ env.DEFAULT_NODE_VERSION }} and Install dependencies
        uses: manferlo81/action-checkout-node-install@v0
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}
          registry-url: https://registry.npmjs.org

      - name: Build
        run: npm run build

      - name: Publish
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

